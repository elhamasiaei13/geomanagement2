{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport Modal from 'antd/lib/modal/Modal';\nimport React, { useEffect, useState } from 'react';\nimport translator from '../Translator/translator';\nimport { PrvnCol, PrvnTag } from './PrvnComponents';\nimport { DeleteTwoTone } from '@ant-design/icons';\nimport { geomanagementApi } from '../service/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteModal(props) {\n  _s();\n\n  console.log('deleteModal :>> ', props);\n  const [isModalVisible, setIsModalVisible] = useState(false); // const [isModalVisible, setIsModalVisible] = useState(false);search param\n\n  useEffect(() => {}, [isModalVisible]);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = e => {\n    const {\n      id\n    } = props.id;\n    setIsModalVisible(false);\n    geomanagementApi.delete(`/${props.type}/${props.id}`).then(() => {\n      toast.success(translator(\"successDone\"));\n      props.getData();\n    }).catch(() => {\n      toast.error(translator(\"errorDone\"));\n    });\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: showModal,\n      children: props.btn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n      className: \"prvn-tag-hover\",\n      onClick: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), isModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", props.showMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.handleOk();\n          setIsModalVisible(false);\n        },\n        children: \"ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteModal, \"DwYyXKZhqxNq7bk7RJfmi0CjwE8=\");\n\n_c = DeleteModal;\nexport default DeleteModal; // props.type = delete| active|deactive \\toggleapprove\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/Modal.js"],"names":["Modal","React","useEffect","useState","translator","PrvnCol","PrvnTag","DeleteTwoTone","geomanagementApi","toast","DeleteModal","props","console","log","isModalVisible","setIsModalVisible","showModal","handleOk","e","id","delete","type","then","success","getData","catch","error","handleCancel","btn","showMessage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD,CAFwB,CAGxB;;AACAD,EAAAA,SAAS,CAAC,MAAM,CAAG,CAAV,EAAY,CAACY,cAAD,CAAZ,CAAT;;AACA,QAAME,SAAS,GAAG,MAAM;AACpBD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAIA,QAAME,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAASR,KAAK,CAACQ,EAArB;AACAJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAP,IAAAA,gBAAgB,CAACY,MAAjB,CAAyB,IAAGT,KAAK,CAACU,IAAK,IAAGV,KAAK,CAACQ,EAAG,EAAnD,EACKG,IADL,CACU,MAAM;AACRb,MAAAA,KAAK,CAACc,OAAN,CAAcnB,UAAU,CAAC,aAAD,CAAxB;AACAO,MAAAA,KAAK,CAACa,OAAN;AACH,KAJL,EAKKC,KALL,CAKW,MAAM;AACThB,MAAAA,KAAK,CAACiB,KAAN,CAAYtB,UAAU,CAAC,WAAD,CAAtB;AACH,KAPL;AAQH,GAXD;;AAaA,QAAMuB,YAAY,GAAG,MAAM;AACvBZ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BAEI;AAAM,MAAA,OAAO,EAAEC,SAAf;AAAA,gBACKL,KAAK,CAACiB;AADX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAC,gBAAzB;AAA0C,MAAA,OAAO,EAAEZ;AAAnD;AAAA;AAAA;AAAA;AAAA,YANJ,EAQKF,cAAc,iBACX;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA,wBAAMH,KAAK,CAACkB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACnBlB,UAAAA,KAAK,CAACM,QAAN;AACAF,UAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAQ,QAAA,OAAO,EAAEY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA9CQjB,W;;KAAAA,W;AAgDT,eAAeA,WAAf,C,CACA","sourcesContent":["import Modal from 'antd/lib/modal/Modal';\nimport React, { useEffect, useState } from 'react';\nimport translator from '../Translator/translator';\nimport { PrvnCol, PrvnTag } from './PrvnComponents';\nimport { DeleteTwoTone } from '@ant-design/icons';\nimport { geomanagementApi } from '../service/api';\nimport { toast } from 'react-toastify';\n\n\nfunction DeleteModal(props) {\n    console.log('deleteModal :>> ', props);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    // const [isModalVisible, setIsModalVisible] = useState(false);search param\n    useEffect(() => { }, [isModalVisible])\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = (e) => {\n        const { id } = props.id\n        setIsModalVisible(false);\n        geomanagementApi.delete(`/${props.type}/${props.id}`)\n            .then(() => {\n                toast.success(translator(\"successDone\"));\n                props.getData();\n            })\n            .catch(() => {\n                toast.error(translator(\"errorDone\"));\n            })\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    return (\n        <div classname=\"modal\">\n\n            <span onClick={showModal} >\n                {props.btn}\n            </span>\n\n            <DeleteTwoTone className=\"prvn-tag-hover\" onClick={showModal} />\n\n            {isModalVisible &&\n                <div className=\"modal\">\n                    <p > {props.showMessage}</p>\n                    <button onClick={() => {\n                        props.handleOk()\n                        setIsModalVisible(false);\n                    }} >ok</button>\n                    <button onClick={handleCancel}>cancel</button>\n                </div>}\n        </div>\n    )\n}\n\nexport default DeleteModal;\n// props.type = delete| active|deactive \\toggleapprove"]},"metadata":{},"sourceType":"module"}