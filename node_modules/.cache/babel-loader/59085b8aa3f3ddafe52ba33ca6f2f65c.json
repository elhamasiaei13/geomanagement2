{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/component2/DeleteModal.js\",\n    _s = $RefreshSig$();\n\nimport Modal from 'antd/lib/modal/Modal';\nimport React, { useEffect, useState } from 'react';\nimport translator from '../Translator/translator';\nimport { PrvnCol, PrvnTag } from './PrvnComponents';\nimport { DeleteTwoTone } from '@ant-design/icons';\nimport { geomanagementApi } from '../service/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteModal(props) {\n  _s();\n\n  console.log('deleteModal :>> ', props);\n  const [isModalVisible, setIsModalVisible] = useState(false); // const [isModalVisible, setIsModalVisible] = useState(false);search param\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = e => {\n    const {\n      id\n    } = props.id;\n    setIsModalVisible(false);\n    geomanagementApi.delete(`/${props.type}/${props.id}`);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(PrvnTag, {\n      color: \"red\",\n      className: \"prvn-tag-hover\",\n      onClick: showModal,\n      children: /*#__PURE__*/_jsxDEV(DeleteTwoTone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" \\u0627\\u0632 \\u062D\\u0630\\u0641 \\u0627\\u06CC\\u0646 \\u0631\\u06A9\\u0648\\u0631\\u062F \\u0627\\u0637\\u0645\\u06CC\\u0646\\u0627\\u0646 \\u062F\\u0627\\u0631\\u06CC\\u062F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteModal, \"ZFwHEtl1ZQoNaflbPbQvGOHlSaM=\");\n\n_c = DeleteModal;\nexport default DeleteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/component2/DeleteModal.js"],"names":["Modal","React","useEffect","useState","translator","PrvnCol","PrvnTag","DeleteTwoTone","geomanagementApi","DeleteModal","props","console","log","isModalVisible","setIsModalVisible","showModal","handleOk","e","id","delete","type","handleCancel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD,CAFwB,CAGxB;;AAEA,QAAMY,SAAS,GAAG,MAAM;AACpBD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAIA,QAAME,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAASR,KAAK,CAACQ,EAArB;AACAJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAN,IAAAA,gBAAgB,CAACW,MAAjB,CAAyB,IAAGT,KAAK,CAACU,IAAK,IAAGV,KAAK,CAACQ,EAAG,EAAnD;AACH,GAJD;;AAMA,QAAMG,YAAY,GAAG,MAAM;AACvBP,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,KAAf;AACI,MAAA,SAAS,EAAC,gBADd;AAEI,MAAA,OAAO,EAAEC,SAFb;AAAA,6BAGI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA/BQN,W;;KAAAA,W;AAiCT,eAAeA,WAAf","sourcesContent":["import Modal from 'antd/lib/modal/Modal';\nimport React, { useEffect, useState } from 'react';\nimport translator from '../Translator/translator';\nimport { PrvnCol, PrvnTag } from './PrvnComponents';\nimport { DeleteTwoTone } from '@ant-design/icons';\nimport { geomanagementApi } from '../service/api';\n\n\n\nfunction DeleteModal(props) {\n    console.log('deleteModal :>> ', props);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    // const [isModalVisible, setIsModalVisible] = useState(false);search param\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = (e) => {\n        const { id } = props.id\n        setIsModalVisible(false);\n        geomanagementApi.delete(`/${props.type}/${props.id}`)\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    return (\n        <div classname=\"modal\">\n            <PrvnTag color=\"red\"\n                className=\"prvn-tag-hover\"\n                onClick={showModal} >\n                <DeleteTwoTone />\n            </PrvnTag>\n\n            {/* <Modal title=\"Basic Modal\" style={{ display: \"block\" }} visible={true} onOk={() => { handleOk() }} onCancel={handleCancel}> */}\n                <p> از حذف این رکورد اطمینان دارید</p>\n            {/* </Modal> */}\n        </div>\n    )\n}\n\nexport default DeleteModal;"]},"metadata":{},"sourceType":"module"}