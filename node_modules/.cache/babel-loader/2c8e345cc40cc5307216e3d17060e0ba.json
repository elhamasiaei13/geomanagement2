{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/Teble.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Teble(props) {\n  console.log('props :>> ', props);\n\n  const createHeader = () => {\n    let arrayHeader = [];\n    props.columns.forEach(it => {\n      arrayHeader.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: it.title\n      }, it.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this));\n    });\n    return arrayHeader;\n  };\n\n  const createBody = (headerItem = []) => {\n    let sortData = [];\n    let obj = {};\n    let headerIndex = [];\n    let body = []; ///dynamic change Header\n\n    props.columns.forEach(it => {\n      headerIndex.push(it.dataIndex);\n    });\n    props.data.forEach(it => {\n      obj = {};\n      props.columns.forEach(h => {\n        const obj_name = {};\n        obj_name[h.dataIndex] = it[h.dataIndex];\n        obj_name.value = it[h.dataIndex];\n        obj = Object.assign({}, obj, obj_name);\n      });\n      sortData.push(obj);\n    });\n    sortData.map(objectRow => {\n      body.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", createTd(objectRow), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this));\n    });\n    return body;\n  };\n\n  const createTd = objectRow => {\n    let halfbody = [];\n\n    for (const [key, value] of Object.entries(objectRow)) {\n      // console.log(`key =>>${key}: value=> ${value}`);\n      halfbody.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this));\n    }\n\n    return halfbody;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: createHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: createBody()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = Teble;\nexport default Teble; // Teble.defaultProps = {\n//     columns: [{\n//         title: 'localName',\n//         dataIndex: 'localName',\n//         key: 'localName',\n//     }],\n//     data: []\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Teble\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/Teble.js"],"names":["React","Teble","props","console","log","createHeader","arrayHeader","columns","forEach","it","push","title","key","createBody","headerItem","sortData","obj","headerIndex","body","dataIndex","data","h","obj_name","value","Object","assign","map","objectRow","createTd","halfbody","entries","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAElBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;;AACA,QAAMG,YAAY,GAAG,MAAM;AACvB,QAAIC,WAAW,GAAG,EAAlB;AACAJ,IAAAA,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBC,EAAE,IAAI;AACxBH,MAAAA,WAAW,CAACI,IAAZ,eACI;AAAA,kBACKD,EAAE,CAACE;AADR,SAASF,EAAE,CAACG,GAAZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND;AAOA,WAAON,WAAP;AACH,GAVD;;AAYA,QAAMO,UAAU,GAAG,CAACC,UAAU,GAAG,EAAd,KAAqB;AACpC,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,IAAI,GAAG,EAAX,CAJoC,CAMpC;;AACAhB,IAAAA,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBC,EAAE,IAAI;AACxBQ,MAAAA,WAAW,CAACP,IAAZ,CAAiBD,EAAE,CAACU,SAApB;AACH,KAFD;AAIAjB,IAAAA,KAAK,CAACkB,IAAN,CAAWZ,OAAX,CAAmBC,EAAE,IAAI;AACrBO,MAAAA,GAAG,GAAG,EAAN;AACAd,MAAAA,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBa,CAAC,IAAI;AACvB,cAAMC,QAAQ,GAAG,EAAjB;AACAA,QAAAA,QAAQ,CAACD,CAAC,CAACF,SAAH,CAAR,GAAwBV,EAAE,CAACY,CAAC,CAACF,SAAH,CAA1B;AACAG,QAAAA,QAAQ,CAACC,KAAT,GAAiBd,EAAE,CAACY,CAAC,CAACF,SAAH,CAAnB;AACAH,QAAAA,GAAG,GAAGQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,GAAlB,EAAuBM,QAAvB,CAAN;AACH,OALD;AAMAP,MAAAA,QAAQ,CAACL,IAAT,CAAcM,GAAd;AACH,KATD;AAYAD,IAAAA,QAAQ,CAACW,GAAT,CAAaC,SAAS,IAAI;AACtBT,MAAAA,IAAI,CAACR,IAAL,eAAU;AAAA,wBAAMkB,QAAQ,CAACD,SAAD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAAV;AACH,KAFD;AAKA,WAAOT,IAAP;AACH,GA7BD;;AA8BA,QAAMU,QAAQ,GAAID,SAAD,IAAe;AAC5B,QAAIE,QAAQ,GAAG,EAAf;;AAEA,SAAK,MAAM,CAACjB,GAAD,EAAMW,KAAN,CAAX,IAA2BC,MAAM,CAACM,OAAP,CAAeH,SAAf,CAA3B,EAAsD;AAClD;AACAE,MAAAA,QAAQ,CAACnB,IAAT,eAAc;AAAA,wBAAMa,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd;AACH;;AACD,WAAOM,QAAP;AACH,GARD;;AAUA,sBACI;AAAA,2BACI;AAAO,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAA,8BACI;AAAA,+BACI;AAAA,oBACK1B,YAAY;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,kBACKQ,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH;;KAtEQZ,K;AAwET,eAAeA,KAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n\n\nfunction Teble(props) {\n\n    console.log('props :>> ', props);\n    const createHeader = () => {\n        let arrayHeader = []\n        props.columns.forEach(it => {\n            arrayHeader.push(\n                <th key={it.key}>\n                    {it.title}\n                </th>\n            )\n        })\n        return arrayHeader\n    }\n\n    const createBody = (headerItem = []) => {\n        let sortData = []\n        let obj = {}\n        let headerIndex = []\n        let body = []\n\n        ///dynamic change Header\n        props.columns.forEach(it => {\n            headerIndex.push(it.dataIndex)\n        })\n\n        props.data.forEach(it => {\n            obj = {}\n            props.columns.forEach(h => {\n                const obj_name = {};\n                obj_name[h.dataIndex] = it[h.dataIndex];\n                obj_name.value = it[h.dataIndex]\n                obj = Object.assign({}, obj, obj_name)\n            })\n            sortData.push(obj)\n        })\n\n\n        sortData.map(objectRow => {\n            body.push(<tr> {createTd(objectRow)} </tr>)\n        })\n\n\n        return body\n    }\n    const createTd = (objectRow) => {\n        let halfbody = []\n\n        for (const [key, value] of Object.entries(objectRow)) {\n            // console.log(`key =>>${key}: value=> ${value}`);\n            halfbody.push(<td> {value}</td>)\n        }\n        return halfbody\n    }\n\n    return (\n        <>\n            <table style={{ width: \"100%\" }}>\n                <thead >\n                    <tr>\n                        {createHeader()}\n                    </tr>\n                </thead>\n                <tbody>\n                    {createBody()}\n                </tbody>\n            </table>\n        </>\n    );\n\n}\n\nexport default Teble;\n\n// Teble.defaultProps = {\n\n//     columns: [{\n//         title: 'localName',\n//         dataIndex: 'localName',\n//         key: 'localName',\n//     }],\n//     data: []\n// }\n"]},"metadata":{},"sourceType":"module"}