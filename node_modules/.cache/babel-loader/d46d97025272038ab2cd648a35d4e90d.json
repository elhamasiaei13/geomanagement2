{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/WrapperForm.js\";\nimport { Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WrapperForm(props) {\n  const initialValues = {};\n  const validationSchema = Yup.object().shape({\n    personUuid: Yup.string().required()\n  });\n\n  const submitHandler = (values, actions) => {\n    console.log('values :>> ', values);\n    console.log('actions :>> ', actions);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues // validationSchema={validationSchema}\n      ,\n      onSubmit: submitHandler,\n      children: ({\n        errors,\n        touched,\n        handleSubmit,\n        isSubmitting,\n        values,\n        handleReset,\n        handleBlur\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: handleSubmit,\n        className: \"prvn-form\",\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          hasFeedback: true,\n          label: translator(\"Address\"),\n          required: true,\n          help: this.helpValue(touched.address, errors.address),\n          validateStatus: this.validateStatus(touched.address, errors.address),\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"address\",\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(\"input\", {\n              tabIndex: \"4\",\n              rows: 4,\n              maxLength: 339\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_c = WrapperForm;\nexport default WrapperForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WrapperForm\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/WrapperForm.js"],"names":["Field","Form","Formik","React","Yup","WrapperForm","props","initialValues","validationSchema","object","shape","personUuid","string","required","submitHandler","values","actions","console","log","errors","touched","handleSubmit","isSubmitting","handleReset","handleBlur","translator","helpValue","address","validateStatus","field"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,QAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,gBAAgB,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,IAAAA,UAAU,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb;AAD4B,GAAnB,CAAzB;;AAIA,QAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,MAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,OAA5B;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,aAAa,EAAET,aADnB,CAEI;AAFJ;AAGI,MAAA,QAAQ,EAAEO,aAHd;AAAA,gBAIK,CAAC;AAAEK,QAAAA,MAAF;AAAUC,QAAAA,OAAV;AAAmBC,QAAAA,YAAnB;AAAiCC,QAAAA,YAAjC;AAA+CP,QAAAA,MAA/C;AAAuDQ,QAAAA,WAAvD;AAAoEC,QAAAA;AAApE,OAAD,kBACG,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEH,YAAhB;AAA8B,QAAA,SAAS,EAAC,WAAxC;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,WAAW,MADf;AAEI,UAAA,KAAK,EAAEI,UAAU,CAAC,SAAD,CAFrB;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,IAAI,EAAE,KAAKC,SAAL,CAAeN,OAAO,CAACO,OAAvB,EAAgCR,MAAM,CAACQ,OAAvC,CAJV;AAKI,UAAA,cAAc,EAAE,KAAKC,cAAL,CAAoBR,OAAO,CAACO,OAA5B,EAAqCR,MAAM,CAACQ,OAA5C,CALpB;AAAA,iCAMI,QAAC,KAAD;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,MAAM,EAAE,CAAC;AAAEE,cAAAA;AAAF,aAAD,kBAAe;AAAO,cAAA,QAAQ,EAAC,GAAhB;AAAoB,cAAA,IAAI,EAAE,CAA1B;AAA8B,cAAA,SAAS,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA;AAH3B;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;KArCQxB,W;AAuCT,eAAeA,WAAf","sourcesContent":["import { Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\n\nfunction WrapperForm(props) {\n    const initialValues = {}\n    const validationSchema = Yup.object().shape({\n        personUuid: Yup.string().required(),\n\n    });\n    const submitHandler = (values, actions) => {\n        console.log('values :>> ', values);\n        console.log('actions :>> ', actions);\n    }\n\n    return (\n        <div>\n            <Formik\n                initialValues={initialValues}\n                // validationSchema={validationSchema}\n                onSubmit={submitHandler} >\n                {({ errors, touched, handleSubmit, isSubmitting, values, handleReset, handleBlur }) => (\n                    <Form onFinish={handleSubmit} className=\"prvn-form\">\n                        <Form.Item\n                            hasFeedback\n                            label={translator(\"Address\")}\n                            required\n                            help={this.helpValue(touched.address, errors.address)}\n                            validateStatus={this.validateStatus(touched.address, errors.address)} >\n                            <Field\n\n                                name=\"address\"\n                                render={({ field }) => <input tabIndex=\"4\" rows={4}  maxLength={339} />} />\n                        </Form.Item>\n\n\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nexport default WrapperForm;"]},"metadata":{},"sourceType":"module"}