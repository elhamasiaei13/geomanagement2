{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/WrapperForm.js\";\nimport { getDefaultNormalizer } from '@testing-library/react';\nimport { Formik, Field, Form } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport { geomanagementApi } from '../service/api';\nimport translator from '../Translator/translator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WrapperForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      initialValues: {}\n    };\n    this.validationSchema = Yup.object().shape({\n      personUuid: Yup.string().required()\n    });\n\n    this.submitHandler = (values, actions) => {\n      console.log('values :>> ', values);\n      console.log('actions :>> ', actions);\n    };\n\n    this.submit = async values => {\n      // await new Promise((r) => setTimeout(r, 500));\n      await geomanagementApi.post(\"/countries\", values).then(res => alert(res)).catch(err => alert(err)); // alert(JSON.stringify(values, r, 2));\n    };\n  }\n\n  componentDidMount() {\n    geomanagementApi.get(\"/countries/3\").then(res => {\n      this.setState({\n        initialValues: res.data.data\n      });\n    });\n  }\n\n  // const getinitialData = async () => {\n  //     const res = await geomanagementApi.get(\"/countries/3\")\n  //     let data = res.data && res.data.data\n  //     return res.data.data\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: this.submit(),\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"enName\",\n            children: \"enName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"enName\",\n            name: \"enName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"localName\",\n            children: \"localName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"localName\",\n            name: \"localName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"otherName\",\n            children: \"otherName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"otherName\",\n            name: \"otherName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"shortCode\",\n            children: \"shortCode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"shortCode\",\n            name: \"shortCode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WrapperForm;","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/WrapperForm.js"],"names":["getDefaultNormalizer","Formik","Field","Form","React","useEffect","useState","Yup","geomanagementApi","translator","WrapperForm","Component","state","initialValues","validationSchema","object","shape","personUuid","string","required","submitHandler","values","actions","console","log","submit","post","then","res","alert","catch","err","componentDidMount","get","setState","data","render"],"mappings":"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","sourcesContent":["import { getDefaultNormalizer } from '@testing-library/react';\nimport { Formik, Field, Form } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport { geomanagementApi } from '../service/api';\nimport translator from '../Translator/translator';\nclass WrapperForm extends React.Component {\n\n    state = {\n        initialValues: {}\n    }\n    componentDidMount() {\n        geomanagementApi.get(\"/countries/3\").then((res) => {\n            this.setState({ initialValues: res.data.data })\n        })\n    }\n\n    validationSchema = Yup.object().shape({\n        personUuid: Yup.string().required(),\n\n    });\n    submitHandler = (values, actions) => {\n        console.log('values :>> ', values);\n        console.log('actions :>> ', actions);\n    }\n\n    // helpValue = (isTouched, hasErr) => {\n    //     return isTouched && hasErr\n    // }\n    // validateStatus = (isTouched, hasErr) => {\n    //     return isTouched && hasErr ? 'error' : ''\n    // }\n    submit = async (values) => {\n        // await new Promise((r) => setTimeout(r, 500));\n        await geomanagementApi.post(\"/countries\", values).then((res) =>\n            alert(res)).catch(err => alert(err))\n        // alert(JSON.stringify(values, r, 2));\n    }\n\n    // const getinitialData = async () => {\n    //     const res = await geomanagementApi.get(\"/countries/3\")\n    //     let data = res.data && res.data.data\n    //     return res.data.data\n\n    // }\n    render() {\n        return (\n            <div>\n                <Formik\n                    initialValues={initialValues}\n                    onSubmit={this.submit()}\n                >\n                    <Form>\n                        <label htmlFor=\"enName\">enName</label>\n                        <Field id=\"enName\" name=\"enName\" />\n\n                        <label htmlFor=\"localName\">localName</label>\n                        <Field id=\"localName\" name=\"localName\" />\n\n                        <label htmlFor=\"otherName\">otherName</label>\n                        <Field\n                            id=\"otherName\"\n                            name=\"otherName\"\n                        />\n                        <label htmlFor=\"shortCode\">shortCode</label>\n                        <Field\n                            id=\"shortCode\"\n                            name=\"shortCode\"\n                        />\n                        <button type=\"submit\">Submit</button>\n                    </Form>\n                </Formik>\n            </div>\n        );\n    }\n}\n\n\nexport default WrapperForm;"]},"metadata":{},"sourceType":"module"}