{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/pages/CountriesForm.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form, Field } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { PrvnButton, PrvnForm, PrvnFormItem, PrvnFormItemInput, PrvnUseForm } from '../../component2/PrvnComponents';\nimport { geomanagementApi } from '../../service/api';\nimport translator from '../../Translator/translator';\nimport CommonField from '../CommonField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CountriesForm(props) {\n  _s();\n\n  const [form] = PrvnUseForm();\n  const [initialValues, setInitialValues] = useState({});\n  const [count, seCount] = useState(true);\n  useEffect(async () => {\n    if (props.edit) {\n      onFill();\n    }\n  }, []);\n  const id = props.location.state && props.location.state.id;\n\n  const onFinish = async values => {\n    console.log('values :>> ', values);\n    console.log('init :>> ', initialValues);\n\n    if (props.edit == true) {\n      await geomanagementApi.put(`/countries/${id}`, values).then(res => {\n        props.history.push(\"/countries\");\n        alert(res.data);\n      }).catch(err => alert(err));\n    } else {\n      await geomanagementApi.post(`/countries`, values).then(res => {\n        props.history.push(\"/countries\");\n        alert(res);\n      }).catch(err => alert(err));\n    }\n  };\n\n  const onFill = () => {\n    console.log('props.initialValues :>> ', props.initialValues); // const id = props.location.state && props.location.state.id\n\n    geomanagementApi.get(\"/countries/\" + id).then(response => {\n      form.setFieldsValue(response.data.data);\n    });\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const validationSchema = Yup.object().shape({\n    enName: Yup.string().required(\"required\"),\n    localName: Yup.string().required(\"required\"),\n    otherName: Yup.string().required(\"required\"),\n    shortCode: Yup.string().required(\"required\")\n  });\n  return /*#__PURE__*/_jsxDEV(PrvnForm, {\n    form: form,\n    name: \"control-hooks\" // initialValues={initialValues}\n    // validateMessages={validateMessages}\n    ,\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(PrvnFormItemInput, {\n      rules: [{\n        required: true,\n        message: `${translator(\"shortCode\")} الزامی است`\n      }, {\n        min: 2,\n        message: 'طول عبارت کوتاه است'\n      }],\n      name: \"shortCode\",\n      label: translator(\"shortCode\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrvnFormItemInput, {\n      rules: [{\n        required: true,\n        message: `${translator(\"otherName\")} الزامی است`\n      }, {\n        min: 2,\n        message: 'طول عبارت کوتاه است'\n      }],\n      name: \"otherName\",\n      label: translator(\"otherName\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrvnFormItemInput, {\n      rules: [{\n        required: true,\n        message: `${translator(\"otherName\")} الزامی است`\n      }, {\n        min: 2,\n        message: 'طول عبارت کوتاه است'\n      }],\n      name: \"enName\",\n      label: translator(\"enName\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrvnFormItemInput, {\n      rules: [{\n        min: 2,\n        message: 'طول عبارت کوتاه است'\n      }],\n      name: \"localName\",\n      label: translator(\"localName\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrvnFormItem, {\n      children: [/*#__PURE__*/_jsxDEV(PrvnButton, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrvnButton, {\n        htmlType: \"Prvnbutton\",\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountriesForm, \"KBY71AgJEE6onhJmrYTSshyGgzM=\");\n\n_c = CountriesForm;\nexport default _c2 = withRouter(CountriesForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CountriesForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/pages/CountriesForm.js"],"names":["Formik","Form","Field","React","useEffect","useState","withRouter","Yup","PrvnButton","PrvnForm","PrvnFormItem","PrvnFormItemInput","PrvnUseForm","geomanagementApi","translator","CommonField","CountriesForm","props","form","initialValues","setInitialValues","count","seCount","edit","onFill","id","location","state","onFinish","values","console","log","put","then","res","history","push","alert","data","catch","err","post","get","response","setFieldsValue","onReset","resetFields","validationSchema","object","shape","enName","string","required","localName","otherName","shortCode","message","min"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,YAA/B,EAA6CC,iBAA7C,EAAgEC,WAAhE,QAAmF,iCAAnF;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,IAAD,IAASN,WAAW,EAA1B;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgB,KAAD,EAAQC,OAAR,IAAmBjB,QAAQ,CAAC,IAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIa,KAAK,CAACM,IAAV,EAAgB;AACZC,MAAAA,MAAM;AACT;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,EAAE,GAAGR,KAAK,CAACS,QAAN,CAAeC,KAAf,IAAwBV,KAAK,CAACS,QAAN,CAAeC,KAAf,CAAqBF,EAAxD;;AAGA,QAAMG,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBZ,aAAzB;;AACA,QAAIF,KAAK,CAACM,IAAN,IAAc,IAAlB,EAAwB;AACpB,YAAMV,gBAAgB,CAACmB,GAAjB,CAAsB,cAAaP,EAAG,EAAtC,EAAyCI,MAAzC,EAAiDI,IAAjD,CAAuDC,GAAD,IAAS;AACjEjB,QAAAA,KAAK,CAACkB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACAC,QAAAA,KAAK,CAACH,GAAG,CAACI,IAAL,CAAL;AACH,OAHK,EAGHC,KAHG,CAGGC,GAAG,IAAIH,KAAK,CAACG,GAAD,CAHf,CAAN;AAIH,KALD,MAKO;AACH,YAAM3B,gBAAgB,CAAC4B,IAAjB,CAAuB,YAAvB,EAAoCZ,MAApC,EAA4CI,IAA5C,CAAkDC,GAAD,IAAS;AAC5DjB,QAAAA,KAAK,CAACkB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACAC,QAAAA,KAAK,CAACH,GAAD,CAAL;AACH,OAHK,EAGHK,KAHG,CAGGC,GAAG,IAAIH,KAAK,CAACG,GAAD,CAHf,CAAN;AAIH;AACJ,GAdD;;AAgBA,QAAMhB,MAAM,GAAG,MAAM;AACjBM,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCd,KAAK,CAACE,aAA9C,EADiB,CAEjB;;AACAN,IAAAA,gBAAgB,CAAC6B,GAAjB,CAAqB,gBAAgBjB,EAArC,EAAyCQ,IAAzC,CAA+CU,QAAD,IAAc;AACxDzB,MAAAA,IAAI,CAAC0B,cAAL,CAAoBD,QAAQ,CAACL,IAAT,CAAcA,IAAlC;AACH,KAFD;AAIH,GAPD;;AAQA,QAAMO,OAAO,GAAG,MAAM;AAClB3B,IAAAA,IAAI,CAAC4B,WAAL;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGxC,GAAG,CAACyC,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,IAAAA,MAAM,EAAE3C,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CADgC;AAExCC,IAAAA,SAAS,EAAE9C,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAF6B;AAGxCE,IAAAA,SAAS,EAAE/C,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAH6B;AAIxCG,IAAAA,SAAS,EAAEhD,GAAG,CAAC4C,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;AAJ6B,GAAnB,CAAzB;AASA,sBACI,QAAC,QAAD;AACI,IAAA,IAAI,EAAElC,IADV;AAEI,IAAA,IAAI,EAAC,eAFT,CAGI;AACA;AAJJ;AAKI,IAAA,QAAQ,EAAEU,QALd;AAAA,4BAMI,QAAC,iBAAD;AACI,MAAA,KAAK,EAAE,CAAC;AAAEwB,QAAAA,QAAQ,EAAE,IAAZ;AAAkBI,QAAAA,OAAO,EAAG,GAAE1C,UAAU,CAAC,WAAD,CAAc;AAAtD,OAAD,EAAuE;AAAE2C,QAAAA,GAAG,EAAE,CAAP;AAAUD,QAAAA,OAAO,EAAE;AAAnB,OAAvE,CADX;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE1C,UAAU,CAAC,WAAD;AAHrB;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI,QAAC,iBAAD;AACI,MAAA,KAAK,EAAE,CAAC;AAAEsC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBI,QAAAA,OAAO,EAAG,GAAE1C,UAAU,CAAC,WAAD,CAAc;AAAtD,OAAD,EAAuE;AAAE2C,QAAAA,GAAG,EAAE,CAAP;AAAUD,QAAAA,OAAO,EAAE;AAAnB,OAAvE,CADX;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE1C,UAAU,CAAC,WAAD;AAHrB;AAAA;AAAA;AAAA;AAAA,YAXJ,eAgBI,QAAC,iBAAD;AACI,MAAA,KAAK,EAAE,CAAC;AAAEsC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBI,QAAAA,OAAO,EAAG,GAAE1C,UAAU,CAAC,WAAD,CAAc;AAAtD,OAAD,EAAuE;AAAE2C,QAAAA,GAAG,EAAE,CAAP;AAAUD,QAAAA,OAAO,EAAE;AAAnB,OAAvE,CADX;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAE1C,UAAU,CAAC,QAAD;AAHrB;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAqBI,QAAC,iBAAD;AACI,MAAA,KAAK,EAAE,CAAC;AAAE2C,QAAAA,GAAG,EAAE,CAAP;AAAUD,QAAAA,OAAO,EAAE;AAAnB,OAAD,CADX;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE1C,UAAU,CAAC,WAAD;AAHrB;AAAA;AAAA;AAAA;AAAA,YArBJ,eA2BI,QAAC,YAAD;AAAA,8BAEI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,QAAQ,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAC,YAArB;AAAkC,QAAA,OAAO,EAAE+B,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;GA7FQ7B,a;;KAAAA,a;AA+FT,qBAAeV,UAAU,CAACU,aAAD,CAAzB","sourcesContent":["import { Formik, Form, Field } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { PrvnButton, PrvnForm, PrvnFormItem, PrvnFormItemInput, PrvnUseForm } from '../../component2/PrvnComponents';\nimport { geomanagementApi } from '../../service/api';\nimport translator from '../../Translator/translator';\nimport CommonField from '../CommonField';\n\nfunction CountriesForm(props) {\n    const [form] = PrvnUseForm()\n    const [initialValues, setInitialValues] = useState({})\n    const [count, seCount] = useState(true)\n\n    useEffect(async () => {\n        if (props.edit) {\n            onFill()\n        }\n    }, [])\n\n    const id = props.location.state && props.location.state.id\n\n\n    const onFinish = async (values) => {\n        console.log('values :>> ', values);\n        console.log('init :>> ', initialValues);\n        if (props.edit == true) {\n            await geomanagementApi.put(`/countries/${id}`, values).then((res) => {\n                props.history.push(\"/countries\")\n                alert(res.data)\n            }).catch(err => alert(err))\n        } else {\n            await geomanagementApi.post(`/countries`, values).then((res) => {\n                props.history.push(\"/countries\")\n                alert(res)\n            }).catch(err => alert(err))\n        }\n    }\n\n    const onFill = () => {\n        console.log('props.initialValues :>> ', props.initialValues);\n        // const id = props.location.state && props.location.state.id\n        geomanagementApi.get(\"/countries/\" + id).then((response) => {\n            form.setFieldsValue(response.data.data)\n        })\n\n    };\n    const onReset = () => {\n        form.resetFields();\n    };\n\n    const validationSchema = Yup.object().shape({\n        enName: Yup.string().required(\"required\"),\n        localName: Yup.string().required(\"required\"),\n        otherName: Yup.string().required(\"required\"),\n        shortCode: Yup.string().required(\"required\"),\n    });\n\n\n\n    return (\n        <PrvnForm\n            form={form}\n            name=\"control-hooks\"\n            // initialValues={initialValues}\n            // validateMessages={validateMessages}\n            onFinish={onFinish}>\n            <PrvnFormItemInput\n                rules={[{ required: true, message: `${translator(\"shortCode\")} الزامی است` }, { min: 2, message: 'طول عبارت کوتاه است' }]}\n                name=\"shortCode\"\n                label={translator(\"shortCode\")}\n            />\n            <PrvnFormItemInput\n                rules={[{ required: true, message: `${translator(\"otherName\")} الزامی است` }, { min: 2, message: 'طول عبارت کوتاه است' }]}\n                name=\"otherName\"\n                label={translator(\"otherName\")}\n            />\n            <PrvnFormItemInput\n                rules={[{ required: true, message: `${translator(\"otherName\")} الزامی است` }, { min: 2, message: 'طول عبارت کوتاه است' }]}\n                name=\"enName\"\n                label={translator(\"enName\")}\n            />\n            <PrvnFormItemInput\n                rules={[{ min: 2, message: 'طول عبارت کوتاه است' }]}\n                name=\"localName\"\n                label={translator(\"localName\")}\n            />\n\n            <PrvnFormItem >\n\n                <PrvnButton type=\"primary\" htmlType=\"submit\">\n                    Submit\n                 </PrvnButton>\n\n                <PrvnButton htmlType=\"Prvnbutton\" onClick={onReset}>\n                    Reset\n            </PrvnButton>\n\n            </PrvnFormItem>\n        </PrvnForm >\n\n    );\n}\n\nexport default withRouter(CountriesForm);"]},"metadata":{},"sourceType":"module"}