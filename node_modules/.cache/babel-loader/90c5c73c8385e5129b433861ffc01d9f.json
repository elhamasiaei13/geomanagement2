{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/pages/SearchForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { geomanagementApi } from '../../service/api';\nimport translator from '../../Translator/translator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchForm(props) {\n  _s();\n\n  const [name, setName] = useState(\"\"); // const getData = async (name) => {\n  //     const params = { name: name }\n  //     try {\n  //         const res = await geomanagementApi.get(\"/countries\", { params: params })\n  //         setDataSource(res.data.data)\n  //     } catch (error) {\n  //         setDataSource([])\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: translator(\"search\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        value: props.name,\n        onChange: e => {\n          props.onChange; // setName(e.target.value)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.mySubmitHandler,\n        children: [\" \", translator(\"search\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.reset,\n        children: translator(\"reset\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchForm, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/pages/SearchForm.js"],"names":["React","useState","geomanagementApi","translator","SearchForm","props","name","setName","e","onChange","mySubmitHandler","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CADuB,CAGvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AAEA,sBAEI;AAAA,4BACI;AAAA,gBAAKE,UAAU,CAAC,QAAD;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,KAAK,EAAEE,KAAK,CAACC,IAAzC;AAA+C,QAAA,QAAQ,EAAGE,CAAD,IAAO;AAC5DH,UAAAA,KAAK,CAACI,QAAN,CAD4D,CAE5D;AACH;AAHD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAQ,QAAA,OAAO,EAAGJ,KAAK,CAACK,eAAxB;AAAA,wBAA4CP,UAAU,CAAC,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,OAAO,EAAEE,KAAK,CAACM,KAAvB;AAAA,kBAAgCR,UAAU,CAAC,OAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAeH;;GAhCQC,U;;KAAAA,U;AAkCT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { geomanagementApi } from '../../service/api';\nimport translator from '../../Translator/translator';\n\nfunction SearchForm(props) {\n    const [name, setName] = useState(\"\")\n\n    // const getData = async (name) => {\n    //     const params = { name: name }\n\n    //     try {\n    //         const res = await geomanagementApi.get(\"/countries\", { params: params })\n    //         setDataSource(res.data.data)\n\n    //     } catch (error) {\n    //         setDataSource([])\n\n    //     }\n\n    // }\n\n    return (\n\n        <div>\n            <h3>{translator(\"search\")}</h3>\n            <form>\n                <span> name</span>\n                <input required type=\"text\" value={props.name} onChange={(e) => {\n                    props.onChange\n                    // setName(e.target.value)\n                }} />\n                <button onClick={ props.mySubmitHandler} > {translator(\"search\")}</button>\n                <button onClick={props.reset} >{translator(\"reset\")}</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}