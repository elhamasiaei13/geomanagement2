{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/WrapperForm.js\",\n    _s = $RefreshSig$();\n\nimport { getDefaultNormalizer } from '@testing-library/react';\nimport { Formik, Field, Form } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport { geomanagementApi } from '../service/api';\nimport translator from '../Translator/translator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WrapperForm(props) {\n  _s();\n\n  const [initialValues, setInitialValues] = useState({});\n  const [count, seCount] = useState(true);\n  useEffect(async () => {\n    if (props.edit) {\n      geomanagementApi.get(\"/countries/3\").then(res => {\n        console.log('res.data.data :>> ', res.data.data);\n        setInitialValues(res.data.data);\n      });\n    }\n\n    console.log('initialValues :>> ', initialValues);\n  }, []);\n  const validationSchema = Yup.object().shape({\n    personUuid: Yup.string().required()\n  });\n\n  const submitHandler = (values, actions) => {\n    console.log('values :>> ', values);\n    console.log('actions :>> ', actions);\n  };\n\n  const submit = async values => {\n    await geomanagementApi.post(\"/countries\", values).then(res => alert(res)).catch(err => alert(err)); // alert(JSON.stringify(values, r, 2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: submit,\n      enableReinitialize: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"enName\",\n          children: \"enName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"enName\",\n          name: \"enName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"localName\",\n          children: \"localName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"localName\",\n          name: \"localName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"otherName\",\n          children: \"otherName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"otherName\",\n          name: \"otherName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"shortCode\",\n          children: \"shortCode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"shortCode\",\n          name: \"shortCode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WrapperForm, \"KBY71AgJEE6onhJmrYTSshyGgzM=\");\n\n_c = WrapperForm;\nexport default WrapperForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WrapperForm\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/WrapperForm.js"],"names":["getDefaultNormalizer","Formik","Field","Form","React","useEffect","useState","Yup","geomanagementApi","translator","WrapperForm","props","initialValues","setInitialValues","count","seCount","edit","get","then","res","console","log","data","validationSchema","object","shape","personUuid","string","required","submitHandler","values","actions","submit","post","alert","catch","err"],"mappings":"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","sourcesContent":["import { getDefaultNormalizer } from '@testing-library/react';\nimport { Formik, Field, Form } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport { geomanagementApi } from '../service/api';\nimport translator from '../Translator/translator';\nfunction WrapperForm(props) {\n    const [initialValues, setInitialValues] = useState({})\n    const [count, seCount] = useState(true)\n\n    useEffect(async () => {\n        if (props.edit) {\n            geomanagementApi.get(\"/countries/3\").then((res) => {\n                console.log('res.data.data :>> ', res.data.data);\n                setInitialValues(res.data.data)\n            })\n        }\n        console.log('initialValues :>> ', initialValues);\n    \n    }, [])\n\n    const validationSchema = Yup.object().shape({\n        personUuid: Yup.string().required(),\n\n    });\n    const submitHandler = (values, actions) => {\n        console.log('values :>> ', values);\n        console.log('actions :>> ', actions);\n    }\n\n    \n    const submit = async (values) => {\n        await geomanagementApi.post(\"/countries\", values).then((res) =>\n            alert(res)).catch(err => alert(err))\n        // alert(JSON.stringify(values, r, 2));\n    }\n\n   \n    return (\n        <div>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={submit}\n                enableReinitialize\n            >\n                <Form>\n                    <label htmlFor=\"enName\">enName</label>\n                    <Field id=\"enName\" name=\"enName\" />\n\n                    <label htmlFor=\"localName\">localName</label>\n                    <Field id=\"localName\" name=\"localName\" />\n\n                    <label htmlFor=\"otherName\">otherName</label>\n                    <Field\n                        id=\"otherName\"\n                        name=\"otherName\"\n                    />\n                    <label htmlFor=\"shortCode\">shortCode</label>\n                    <Field\n                        id=\"shortCode\"\n                        name=\"shortCode\"\n                    />\n                    <button type=\"submit\">Submit</button>\n                </Form>\n            </Formik>\n        </div>\n    );\n}\n\nexport default WrapperForm;"]},"metadata":{},"sourceType":"module"}