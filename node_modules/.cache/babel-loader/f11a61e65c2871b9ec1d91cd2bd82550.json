{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/Teble.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Teble(props) {\n  const columns = [{\n    title: 'localName',\n    dataIndex: 'localName',\n    key: 'localName'\n  }, {\n    title: 'enName',\n    dataIndex: 'enName',\n    key: 'enName'\n  }, {\n    title: 'createTime',\n    dataIndex: 'createTime',\n    key: 'createTime',\n    render: (record, index) => {}\n  }];\n  const data = [{\n    \"id\": 3,\n    \"createTime\": \"2021-03-08T07:04:59Z\",\n    \"updateTime\": \"2021-03-08T07:04:59Z\",\n    \"localName\": \"امارات متحده عربی\",\n    \"enName\": \"United Arab Emirates\",\n    \"shortCode\": \"AE\",\n    \"otherName\": null\n  }, {\n    \"id\": 2,\n    \"createTime\": \"2021-03-08T07:04:59Z\",\n    \"updateTime\": \"2021-03-08T07:04:59Z\",\n    \"localName\": \"امارات متحده عربی2\",\n    \"enName\": \"United Arab Emirates2\",\n    \"shortCode\": \"AE2\",\n    \"otherName\": null\n  }, {\n    \"id\": 3,\n    \"createTime\": \"2021-03-08T07:04:59Z3\",\n    \"updateTime\": \"2021-03-08T07:04:59Z3\",\n    \"localName\": \"امارات متحده عربی3\",\n    \"enName\": \"United Arab Emirates3\",\n    \"shortCode\": \"AE3\",\n    \"otherName\": null\n  }, {\n    \"id\": 4,\n    \"createTime\": \"2021-03-08T07:04:59Z4\",\n    \"updateTime\": \"2021-03-08T07:04:59Z4\",\n    \"localName\": \"امارات متحده عربی4\",\n    \"enName\": \"United Arab Emirates4\",\n    \"shortCode\": \"AE4\",\n    \"otherName\": null\n  }];\n\n  const createHeader = () => {\n    let arrayHeader = [];\n    props.columns.forEach(it => {\n      arrayHeader.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: it.title\n      }, it.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this));\n    });\n    return arrayHeader;\n  };\n\n  const createBody = (headerItem = []) => {\n    let sortData = [];\n    let obj = {};\n    let headerIndex = [];\n    let body = []; ///dynamic change Header\n\n    props.columns.forEach(it => {\n      headerIndex.push(it.dataIndex);\n    });\n    props.data.forEach(it => {\n      obj = {};\n      columns.forEach(it => {\n        const obj_name = {};\n        obj_name[it.dataIndex] = it[it.dataIndex];\n        obj_name.value = it[it.dataIndex];\n        obj = Object.assign({}, obj, obj_name);\n      });\n      sortData.push(obj);\n    });\n    sortData.map(object1 => {\n      body.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [\" \", test(object1), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }, this));\n    });\n    return body;\n  };\n\n  const test = object1 => {\n    let halfbody = [];\n\n    for (const [key, value] of Object.entries(object1)) {\n      // console.log(`key =>>${key}: value=> ${value}`);\n      halfbody.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }, this));\n    }\n\n    return halfbody;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: createHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [createBody(), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Jill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Smith\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Eve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Jackson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"94\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = Teble;\nexport default Teble;\nTeble.defaultProps = {\n  columns: [{\n    title: 'localName',\n    dataIndex: 'localName',\n    key: 'localName'\n  }],\n  data: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Teble\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/components/Teble.js"],"names":["React","Teble","props","columns","title","dataIndex","key","render","record","index","data","createHeader","arrayHeader","forEach","it","push","createBody","headerItem","sortData","obj","headerIndex","body","obj_name","value","Object","assign","map","object1","test","halfbody","entries","width","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nfunction Teble(props) {\n    const columns = [{\n        title: 'localName',\n        dataIndex: 'localName',\n        key: 'localName',\n    },\n    {\n        title: 'enName',\n        dataIndex: 'enName',\n        key: 'enName',\n    },\n    {\n        title: 'createTime',\n        dataIndex: 'createTime',\n        key: 'createTime',\n        render: (record, index) => {\n\n        }\n\n    }\n    ]\n    const data = [\n        {\n            \"id\": 3,\n            \"createTime\": \"2021-03-08T07:04:59Z\",\n            \"updateTime\": \"2021-03-08T07:04:59Z\",\n            \"localName\": \"امارات متحده عربی\",\n            \"enName\": \"United Arab Emirates\",\n            \"shortCode\": \"AE\",\n            \"otherName\": null\n        },\n        {\n            \"id\": 2,\n            \"createTime\": \"2021-03-08T07:04:59Z\",\n            \"updateTime\": \"2021-03-08T07:04:59Z\",\n            \"localName\": \"امارات متحده عربی2\",\n            \"enName\": \"United Arab Emirates2\",\n            \"shortCode\": \"AE2\",\n            \"otherName\": null\n        }, {\n            \"id\": 3,\n            \"createTime\": \"2021-03-08T07:04:59Z3\",\n            \"updateTime\": \"2021-03-08T07:04:59Z3\",\n            \"localName\": \"امارات متحده عربی3\",\n            \"enName\": \"United Arab Emirates3\",\n            \"shortCode\": \"AE3\",\n            \"otherName\": null\n        }, {\n            \"id\": 4,\n            \"createTime\": \"2021-03-08T07:04:59Z4\",\n            \"updateTime\": \"2021-03-08T07:04:59Z4\",\n            \"localName\": \"امارات متحده عربی4\",\n            \"enName\": \"United Arab Emirates4\",\n            \"shortCode\": \"AE4\",\n            \"otherName\": null\n        }\n    ]\n\n\n    const createHeader = () => {\n        let arrayHeader = []\n        props.columns.forEach(it => {\n            arrayHeader.push(\n                <th key={it.key}>\n                    {it.title}\n                </th>\n            )\n        })\n        return arrayHeader\n    }\n\n    const createBody = (headerItem = []) => {\n        let sortData = []\n        let obj = {}\n        let headerIndex = []\n        let body = []\n\n        ///dynamic change Header\n        props.columns.forEach(it => {\n            headerIndex.push(it.dataIndex)\n        })\n\n        props.data.forEach(it => {\n            obj = {}\n\n            columns.forEach(it => {\n                const obj_name = {};\n                obj_name[it.dataIndex] = it[it.dataIndex];\n                obj_name.value = it[it.dataIndex]\n                obj = Object.assign({}, obj, obj_name)\n            })\n            sortData.push(obj)\n        })\n\n        sortData.map(object1 => {\n\n            body.push(<tr> {test(object1)} </tr>)\n        })\n\n\n\n        return body\n    }\n    const test = (object1) => {\n        let halfbody = []\n\n        for (const [key, value] of Object.entries(object1)) {\n            // console.log(`key =>>${key}: value=> ${value}`);\n            halfbody.push(<td> {value}</td>)\n        }\n        return halfbody\n    }\n\n    return (\n        <>\n            <table style={{ width: \"100%\" }}>\n                <thead >\n                    <tr>\n                        {createHeader()}\n                    </tr>\n                </thead>\n                <th>Age</th>\n                <tbody>\n                    {createBody()}\n                    <td>Jill</td>\n\n                    <td>Smith</td>\n                    <tr>\n                    </tr>\n                    <td>Eve</td>\n                    <td>50</td>\n                    <td>Jackson</td>\n                    <tr>\n                    </tr>\n                </tbody>\n                <td>94</td>\n            </table>\n        </>\n    );\n\n}\n\nexport default Teble;\n\nTeble.defaultProps = {\n\n    columns: [{\n        title: 'localName',\n        dataIndex: 'localName',\n        key: 'localName',\n    }],\n    data: []\n}\n"]},"metadata":{},"sourceType":"module"}