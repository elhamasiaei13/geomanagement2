{"ast":null,"code":"var _jsxFileName = \"/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/component2/DeleteModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { PrvnCol, PrvnTag } from './PrvnComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeleteModal(props) {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false); // const [isModalVisible, setIsModalVisible] = useState(false);search param\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = e => {\n    const {\n      id\n    } = props.record;\n    setIsModalVisible(false);\n    deleteExpense(props.type, id);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PrvnTag, {\n      color: \"red\",\n      className: \"prvn-tag-hover\",\n      onClick: showModal,\n      children: translator(\"void\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      visible: isModalVisible,\n      onOk: () => {\n        handleOk();\n      },\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"  \\u061F\\u0627\\u0632 \\u0627\\u0628\\u0637\\u0627\\u0644 \\u0627\\u06CC\\u0646 \\u0647\\u0632\\u06CC\\u0646\\u0647 \\u0627\\u0637\\u0645\\u06CC\\u0646\\u0627\\u0646 \\u062F\\u0627\\u0631\\u06CC\\u062F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DeleteModal, \"ZFwHEtl1ZQoNaflbPbQvGOHlSaM=\");\n\n_c = DeleteModal;\nexport default DeleteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteModal\");","map":{"version":3,"sources":["/home/dev-04/parvan/reactProjects/geomanagement2-fe/src/component2/DeleteModal.js"],"names":["React","useEffect","useState","PrvnCol","PrvnTag","DeleteModal","props","isModalVisible","setIsModalVisible","showModal","handleOk","e","id","record","deleteExpense","type","handleCancel","translator"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC;;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD,CADwB,CAExB;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACpBD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAIA,QAAME,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAASN,KAAK,CAACO,MAArB;AACAL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAM,IAAAA,aAAa,CAACR,KAAK,CAACS,IAAP,EAAaH,EAAb,CAAb;AACH,GAJD;;AAMA,QAAMI,YAAY,GAAG,MAAM;AACvBR,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,KAAf;AACI,MAAA,SAAS,EAAC,gBADd;AAEI,MAAA,OAAO,EAAEC,SAFb;AAAA,gBAGKQ,UAAU,CAAC,MAAD;AAHf;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,aAAb;AAA2B,MAAA,OAAO,EAAEV,cAApC;AAAoD,MAAA,IAAI,EAAE,MAAM;AAAEG,QAAAA,QAAQ;AAAI,OAA9E;AAAgF,MAAA,QAAQ,EAAEM,YAA1F;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAaH;;GA9BQX,W;;KAAAA,W;AAgCT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PrvnCol, PrvnTag } from './PrvnComponents';\n\nfunction DeleteModal(props) {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    // const [isModalVisible, setIsModalVisible] = useState(false);search param\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = (e) => {\n        const { id } = props.record\n        setIsModalVisible(false);\n        deleteExpense(props.type, id)\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    return (\n        <>\n            <PrvnTag color=\"red\"\n                className=\"prvn-tag-hover\"\n                onClick={showModal} >\n                {translator(\"void\")}\n            </PrvnTag>\n\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={() => { handleOk() }} onCancel={handleCancel}>\n                <p>  ؟از ابطال این هزینه اطمینان دارید</p>\n            </Modal>\n        </>\n    )\n}\n\nexport default DeleteModal;"]},"metadata":{},"sourceType":"module"}